class Solution {
public:
    vector<vector<int>>ans;
    void twoSum(vector<int>nums,int target,int i,int j){
        while(i<j){
        if(nums[i]+nums[j]>target){
           j--;
        }
        else if(nums[i]+nums[j]<target){
            i++;
        }
        else{
            // ignore duplicates
            while(i<j && nums[i]==nums[i+1]){
                i++;
            }
            while(i<j && nums[j]==nums[j-1]){
                j--;
            }
            ans.push_back({-target,nums[i],nums[j]});
            i++;j--;
        }
        }
           
    }
    vector<vector<int>> threeSum(vector<int>& nums) {
        //agr n 3 se kam hua to no ans
        int n=nums.size();
        // sbse phle sort karo 2 pointer lagane s phle 
        sort(nums.begin(),nums.end());
         if(n<3)return {};
         for(int i=0;i<n-2;i++){
            if(i>0 && nums[i]==nums[i-1]){
                continue;
            }
            // kyuki nums[i]+nums[j]+nums[k]==0 hoga then -nums[k] hai isliye
            int target=-nums[i];
            twoSum(nums,target,i+1,n-1);
         }
         return ans;
    }
};
