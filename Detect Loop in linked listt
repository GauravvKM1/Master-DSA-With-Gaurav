bool detectLoop(Node* head) {
        // your code here
       Node* slow=head;
       Node* fast=head;
       while(fast!=NULL){
        fast=fast->next;
        if(fast!=NULL){
            fast=fast->next;
            slow=slow->next;
        }

        // check if slow==fast
        if(slow==fast)return true;
       }  
       return false;
    }




////2nd way using map


class Solution {
  public:
    // Function to check if the linked list has a loop.
    bool detectLoop(Node* head) {
        // your code here
        unordered_map<Node*,bool>mp;
        while(head!=NULL){
            mp[head]=true;
            head=head->next;
            if(mp.find(head)!=mp.end())return true;
        }
        return false;
    }
};
